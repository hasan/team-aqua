# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import endpoint_pb2 as endpoint__pb2


class DrinkWaterStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.LogSplash = channel.unary_unary(
        '/api.DrinkWater/LogSplash',
        request_serializer=endpoint__pb2.Splash.SerializeToString,
        response_deserializer=endpoint__pb2.LogSplashResponse.FromString,
        )


class DrinkWaterServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def LogSplash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DrinkWaterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'LogSplash': grpc.unary_unary_rpc_method_handler(
          servicer.LogSplash,
          request_deserializer=endpoint__pb2.Splash.FromString,
          response_serializer=endpoint__pb2.LogSplashResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.DrinkWater', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
