// Code generated by protoc-gen-go. DO NOT EDIT.
// source: endpoint.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LogSplashResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogSplashResponse) Reset()         { *m = LogSplashResponse{} }
func (m *LogSplashResponse) String() string { return proto.CompactTextString(m) }
func (*LogSplashResponse) ProtoMessage()    {}
func (*LogSplashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{0}
}

func (m *LogSplashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogSplashResponse.Unmarshal(m, b)
}
func (m *LogSplashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogSplashResponse.Marshal(b, m, deterministic)
}
func (m *LogSplashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogSplashResponse.Merge(m, src)
}
func (m *LogSplashResponse) XXX_Size() int {
	return xxx_messageInfo_LogSplashResponse.Size(m)
}
func (m *LogSplashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogSplashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogSplashResponse proto.InternalMessageInfo

func (m *LogSplashResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *LogSplashResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Splash struct {
	Ts                   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Amount               int32                `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Splash) Reset()         { *m = Splash{} }
func (m *Splash) String() string { return proto.CompactTextString(m) }
func (*Splash) ProtoMessage()    {}
func (*Splash) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{1}
}

func (m *Splash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Splash.Unmarshal(m, b)
}
func (m *Splash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Splash.Marshal(b, m, deterministic)
}
func (m *Splash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Splash.Merge(m, src)
}
func (m *Splash) XXX_Size() int {
	return xxx_messageInfo_Splash.Size(m)
}
func (m *Splash) XXX_DiscardUnknown() {
	xxx_messageInfo_Splash.DiscardUnknown(m)
}

var xxx_messageInfo_Splash proto.InternalMessageInfo

func (m *Splash) GetTs() *timestamp.Timestamp {
	if m != nil {
		return m.Ts
	}
	return nil
}

func (m *Splash) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Since struct {
	Ts                   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Since) Reset()         { *m = Since{} }
func (m *Since) String() string { return proto.CompactTextString(m) }
func (*Since) ProtoMessage()    {}
func (*Since) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{2}
}

func (m *Since) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Since.Unmarshal(m, b)
}
func (m *Since) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Since.Marshal(b, m, deterministic)
}
func (m *Since) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Since.Merge(m, src)
}
func (m *Since) XXX_Size() int {
	return xxx_messageInfo_Since.Size(m)
}
func (m *Since) XXX_DiscardUnknown() {
	xxx_messageInfo_Since.DiscardUnknown(m)
}

var xxx_messageInfo_Since proto.InternalMessageInfo

func (m *Since) GetTs() *timestamp.Timestamp {
	if m != nil {
		return m.Ts
	}
	return nil
}

type WaterConsumedSince struct {
	Amount               int32    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaterConsumedSince) Reset()         { *m = WaterConsumedSince{} }
func (m *WaterConsumedSince) String() string { return proto.CompactTextString(m) }
func (*WaterConsumedSince) ProtoMessage()    {}
func (*WaterConsumedSince) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{3}
}

func (m *WaterConsumedSince) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaterConsumedSince.Unmarshal(m, b)
}
func (m *WaterConsumedSince) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaterConsumedSince.Marshal(b, m, deterministic)
}
func (m *WaterConsumedSince) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaterConsumedSince.Merge(m, src)
}
func (m *WaterConsumedSince) XXX_Size() int {
	return xxx_messageInfo_WaterConsumedSince.Size(m)
}
func (m *WaterConsumedSince) XXX_DiscardUnknown() {
	xxx_messageInfo_WaterConsumedSince.DiscardUnknown(m)
}

var xxx_messageInfo_WaterConsumedSince proto.InternalMessageInfo

func (m *WaterConsumedSince) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func init() {
	proto.RegisterType((*LogSplashResponse)(nil), "api.LogSplashResponse")
	proto.RegisterType((*Splash)(nil), "api.Splash")
	proto.RegisterType((*Since)(nil), "api.Since")
	proto.RegisterType((*WaterConsumedSince)(nil), "api.WaterConsumedSince")
}

func init() { proto.RegisterFile("endpoint.proto", fileDescriptor_e90a83b3c7ac16f6) }

var fileDescriptor_e90a83b3c7ac16f6 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xcf, 0x4b, 0x33, 0x31,
	0x10, 0x86, 0xd9, 0x7c, 0xec, 0xf2, 0x75, 0x8a, 0x05, 0x83, 0xd4, 0xb2, 0x17, 0xcb, 0x9e, 0x8a,
	0x48, 0x2a, 0xad, 0x17, 0xcf, 0x7a, 0xec, 0x29, 0x15, 0x3c, 0xa7, 0x76, 0x5c, 0xc3, 0x76, 0x33,
	0x21, 0x99, 0xfd, 0xff, 0xc5, 0xc4, 0xfa, 0x83, 0x9e, 0xbc, 0xe5, 0x09, 0xf3, 0xbe, 0xcf, 0x24,
	0x30, 0x41, 0xb7, 0xf7, 0x64, 0x1d, 0x2b, 0x1f, 0x88, 0x49, 0xfe, 0x33, 0xde, 0xd6, 0x57, 0x2d,
	0x51, 0x7b, 0xc0, 0x65, 0xba, 0xda, 0x0d, 0xaf, 0x4b, 0xb6, 0x3d, 0x46, 0x36, 0xbd, 0xcf, 0x53,
	0xcd, 0x3d, 0x9c, 0x6f, 0xa8, 0xdd, 0xfa, 0x83, 0x89, 0x6f, 0x1a, 0xa3, 0x27, 0x17, 0x51, 0x4e,
	0x40, 0x50, 0x37, 0x2b, 0xe6, 0xc5, 0xe2, 0xbf, 0x16, 0xd4, 0xc9, 0x0b, 0x28, 0x31, 0x04, 0x0a,
	0x33, 0x31, 0x2f, 0x16, 0x23, 0x9d, 0xa1, 0xd9, 0x40, 0x95, 0x73, 0xf2, 0x1a, 0x04, 0xc7, 0x34,
	0x3f, 0x5e, 0xd5, 0x2a, 0x2b, 0xd5, 0x51, 0xa9, 0x9e, 0x8e, 0x4a, 0x2d, 0x38, 0xca, 0x29, 0x54,
	0xa6, 0xa7, 0xc1, 0x71, 0x2a, 0x2b, 0xf5, 0x27, 0x35, 0x6b, 0x28, 0xb7, 0xd6, 0xbd, 0xe0, 0x5f,
	0xca, 0x9a, 0x1b, 0x90, 0xcf, 0x86, 0x31, 0x3c, 0x90, 0x8b, 0x43, 0x8f, 0xfb, 0xdc, 0xf0, 0xad,
	0x28, 0x7e, 0x2a, 0x56, 0x0c, 0xf0, 0x18, 0xac, 0xeb, 0x52, 0x44, 0xde, 0xc2, 0xe8, 0xeb, 0xe5,
	0x72, 0xac, 0x8c, 0xb7, 0x2a, 0x43, 0x3d, 0x4d, 0x70, 0xfa, 0x2d, 0x77, 0x70, 0xf6, 0xcb, 0x26,
	0x21, 0xa7, 0x3e, 0xa4, 0xf5, 0x65, 0x3a, 0x9f, 0x6e, 0xb3, 0xab, 0xd2, 0xee, 0xeb, 0xf7, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x4e, 0x2b, 0xe3, 0x4d, 0xa0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DrinkWaterClient is the client API for DrinkWater service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DrinkWaterClient interface {
	LogSplash(ctx context.Context, in *Splash, opts ...grpc.CallOption) (*LogSplashResponse, error)
	WaterConsumed(ctx context.Context, in *Since, opts ...grpc.CallOption) (*WaterConsumedSince, error)
}

type drinkWaterClient struct {
	cc *grpc.ClientConn
}

func NewDrinkWaterClient(cc *grpc.ClientConn) DrinkWaterClient {
	return &drinkWaterClient{cc}
}

func (c *drinkWaterClient) LogSplash(ctx context.Context, in *Splash, opts ...grpc.CallOption) (*LogSplashResponse, error) {
	out := new(LogSplashResponse)
	err := c.cc.Invoke(ctx, "/api.DrinkWater/LogSplash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drinkWaterClient) WaterConsumed(ctx context.Context, in *Since, opts ...grpc.CallOption) (*WaterConsumedSince, error) {
	out := new(WaterConsumedSince)
	err := c.cc.Invoke(ctx, "/api.DrinkWater/WaterConsumed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DrinkWaterServer is the server API for DrinkWater service.
type DrinkWaterServer interface {
	LogSplash(context.Context, *Splash) (*LogSplashResponse, error)
	WaterConsumed(context.Context, *Since) (*WaterConsumedSince, error)
}

// UnimplementedDrinkWaterServer can be embedded to have forward compatible implementations.
type UnimplementedDrinkWaterServer struct {
}

func (*UnimplementedDrinkWaterServer) LogSplash(ctx context.Context, req *Splash) (*LogSplashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogSplash not implemented")
}
func (*UnimplementedDrinkWaterServer) WaterConsumed(ctx context.Context, req *Since) (*WaterConsumedSince, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WaterConsumed not implemented")
}

func RegisterDrinkWaterServer(s *grpc.Server, srv DrinkWaterServer) {
	s.RegisterService(&_DrinkWater_serviceDesc, srv)
}

func _DrinkWater_LogSplash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Splash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DrinkWaterServer).LogSplash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DrinkWater/LogSplash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DrinkWaterServer).LogSplash(ctx, req.(*Splash))
	}
	return interceptor(ctx, in, info, handler)
}

func _DrinkWater_WaterConsumed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Since)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DrinkWaterServer).WaterConsumed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DrinkWater/WaterConsumed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DrinkWaterServer).WaterConsumed(ctx, req.(*Since))
	}
	return interceptor(ctx, in, info, handler)
}

var _DrinkWater_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DrinkWater",
	HandlerType: (*DrinkWaterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LogSplash",
			Handler:    _DrinkWater_LogSplash_Handler,
		},
		{
			MethodName: "WaterConsumed",
			Handler:    _DrinkWater_WaterConsumed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "endpoint.proto",
}
